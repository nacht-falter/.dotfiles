# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/.wallpaper.jpg fill

# Set outputs
set $internal_display eDP-1
set $external_display1 DP-4 
set $external_display2 DP-5 

output $external_display1 pos 0 0 res 2560x1440 
output $external_display2 pos 0 0 res 2560x1440 
output $internal_display scale 1.25 pos 0 1440 res 2560x1440 

# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
    exec swayidle -w \
          timeout 300 'swaylock -f -c 000000' \
          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          timeout 900 'systemctl suspend' \
          before-sleep 'playerctl pause' \
          before-sleep 'swaylock -f -c 000000'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
  input "1739:0:Synaptics_TM3289-021" {
      dwt enabled
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
      tap_button_map lrm
  }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    # bindsym $mod+Shift+e exec swaymsg exit
    bindsym $mod+Shift+e exec ~/.dotfiles/scripts/confirm.sh exit

    # Shutdown/reboot
    bindsym $mod+Shift+x exec ~/.dotfiles/scripts/confirm.sh shutdown
    bindsym $mod+Shift+r exec ~/.dotfiles/scripts/confirm.sh reboot

    # Locking:
    bindsym $mod+Shift+i exec swaylock -f -c 000000

    # Suspend:
    bindsym $mod+Shift+s exec ~/.dotfiles/scripts/confirm.sh suspend


    # Brightness controls (light needs to be able to with NOPASSWD):
    bindsym XF86MonBrightnessUp exec sudo light -A 10
    bindsym XF86MonBrightnessDown exec sudo light -U 10 

    # Volume Controls:
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%

    # Media Controls:
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
    bindsym $mod+t exec spt pb -t
    bindsym $mod+n exec spt pb -n
    bindsym $mod+p exec spt pb -p
            
    # Apps:
    bindsym $mod+period exec /usr/bin/xpad -t
    
    # Scripts:
    bindsym $mod+Shift+p exec ~/.dotfiles/scripts/spts.sh
 
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Workspaces:
    set $ws1 1
    set $ws2 2
    set $ws3 3
    set $ws4 4
    set $ws5 5
    set $ws6 6
    set $ws7 7
    set $ws8 8
    set $ws9 9

    # switch to workspace
    bindsym $mod+1 workspace $ws1; exec pgrep alacritty || exec alacritty -e tmux
    bindsym $mod+2 workspace $ws2; exec pgrep firefox || exec firefox
    bindsym $mod+3 workspace $ws3; exec pgrep dolphin || exec dolphin
    bindsym $mod+4 workspace $ws4; exec pgrep obsidian
    bindsym $mod+5 workspace $ws5; exec pgrep thunderbird || exec thunderbird
    bindsym $mod+6 workspace $ws6;
    bindsym $mod+7 workspace $ws7; exec pgrep slack exec slack
    bindsym $mod+8 workspace $ws8; exec pgrep foot || foot -e spt
    bindsym $mod+9 workspace $ws9; exec pgrep chatgpt-desktop || exec chatgpt-desktop

    # Move focused container to workspace
    bindsym $mod+Ctrl+1 move container to workspace $ws1
    bindsym $mod+Ctrl+2 move container to workspace $ws2
    bindsym $mod+Ctrl+3 move container to workspace $ws3
    bindsym $mod+Ctrl+4 move container to workspace $ws4
    bindsym $mod+Ctrl+5 move container to workspace $ws5
    bindsym $mod+Ctrl+6 move container to workspace $ws6
    bindsym $mod+Ctrl+7 move container to workspace $ws7
    bindsym $mod+Ctrl+8 move container to workspace $ws8
    bindsym $mod+Ctrl+9 move container to workspace $ws9

    # Move to workspace with focused container
    bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9

    # Open apps on specific workspaces
    assign [app_id="Alacritty"] $ws1
    assign [class="firefox"] $ws2
    assign [app_id="org.kde.dolphin"] $ws3
    assign [class="obsidian"] $ws4
    assign [class="thunderbird"] $ws5
    assign [class="Slack"] $ws7
    assign [class="Spotify"] $ws8
    assign [app_id="foot"] $ws8
    assign [class="ChatGPT Desktop"] $ws9
    for_window [app_id="xpad"] floating enable

    # Assign workspaces to outputs
    workspace $ws1 output $external_display1
    workspace $ws2 output $external_display1
    workspace $ws3 output $internal_display
    workspace $ws4 output $internal_display
    workspace $ws5 output $internal_display
    workspace $ws6 output $internal_display
    workspace $ws7 output $internal_display
    workspace $ws8 output $internal_display
    workspace $ws9 output $internal_display

# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    
    # Remove all borders from applications
    default_border pixel 1
    hide_edge_borders smart

    # Gaps
    # gaps inner 5
    # gaps outer 0
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Switch keyboard layout
# or input <identifier>
input "type:keyboard" {
    xkb_layout us,de
    xkb_options grp:win_space_toggle
}
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c

}

# Stuff to run on start
exec alacritty -e tmux
exec firefox
exec dolphin
exec obsidian
exec thunderbird
exec slack
exec foot -e spt
exec chatgpt-desktop
exec xpad
exec swaymsg "workspace 1"

include /etc/sway/config.d/*
